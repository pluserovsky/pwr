/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package budget;

import com.toedter.calendar.JDateChooser;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.util.List;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luk
 */
public class JFrameMainWindow extends javax.swing.JFrame {

    public static int id_konta = 0;
    public String info_o_koncie = "Zaloguj się, aby wyświetlić szczegóły.";
    Object[] options = {"OK",
        "Anuluj"};
    Connection con;

    /**
     * Creates new form JFrameMainWindow
     */
    public JFrameMainWindow() {
        initComponents();
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                System.out.println("Closed");
                try {
                    e.getWindow().dispose();
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(JFrameMainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
        zaloguj.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dodaj_transakcje = new javax.swing.JButton();
        edytuj_transakcje = new javax.swing.JButton();
        rejestracja = new javax.swing.JButton();
        statystyki = new javax.swing.JButton();
        o_koncie = new javax.swing.JButton();
        zaloguj = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dodaj_kategorie = new javax.swing.JButton();
        usun_kategorie = new javax.swing.JButton();
        edytuj_kategorie = new javax.swing.JButton();
        wyswietl_kategorie = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        usun_transakcje = new javax.swing.JButton();
        wyswietl_transakcje = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTransakcje = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        zalogowanyLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Budżet domowy 1.0");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setLocation(new java.awt.Point(600, 350));
        setLocationByPlatform(true);
        setResizable(false);

        dodaj_transakcje.setText("Dodaj");
        dodaj_transakcje.setEnabled(false);
        dodaj_transakcje.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dodaj_transakcjeStateChanged(evt);
            }
        });
        dodaj_transakcje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodaj_transakcjeActionPerformed(evt);
            }
        });

        edytuj_transakcje.setText("Edytuj");
        edytuj_transakcje.setEnabled(false);
        edytuj_transakcje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edytuj_transakcjeActionPerformed(evt);
            }
        });

        rejestracja.setText("Zarejestruj konto");
        rejestracja.setEnabled(false);
        rejestracja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejestracjaActionPerformed(evt);
            }
        });

        statystyki.setText("Statystyki");
        statystyki.setEnabled(false);
        statystyki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statystykiActionPerformed(evt);
            }
        });

        o_koncie.setText("Wyświetl profil");
        o_koncie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                o_koncieActionPerformed(evt);
            }
        });

        zaloguj.setText("Zaloguj się");
        zaloguj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zalogujActionPerformed(evt);
            }
        });

        jLabel1.setText("Kategorie:");

        dodaj_kategorie.setText("Dodaj");
        dodaj_kategorie.setEnabled(false);
        dodaj_kategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodaj_kategorieActionPerformed(evt);
            }
        });

        usun_kategorie.setText("Usuń");
        usun_kategorie.setEnabled(false);
        usun_kategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_kategorieActionPerformed(evt);
            }
        });

        edytuj_kategorie.setText("Edytuj");
        edytuj_kategorie.setEnabled(false);
        edytuj_kategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edytuj_kategorieActionPerformed(evt);
            }
        });

        wyswietl_kategorie.setText("Wyświetl");
        wyswietl_kategorie.setEnabled(false);
        wyswietl_kategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyswietl_kategorieActionPerformed(evt);
            }
        });

        jLabel2.setText("Konto:");

        jLabel3.setText("Transakcje:");

        usun_transakcje.setText("Usuń");
        usun_transakcje.setEnabled(false);
        usun_transakcje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_transakcjeActionPerformed(evt);
            }
        });

        wyswietl_transakcje.setText("Wyświetl");
        wyswietl_transakcje.setEnabled(false);
        wyswietl_transakcje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyswietl_transakcjeActionPerformed(evt);
            }
        });

        jTableTransakcje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Kategoria", "Nazwa", "Data", "Kwota", "Komentarz"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableTransakcje);
        if (jTableTransakcje.getColumnModel().getColumnCount() > 0) {
            jTableTransakcje.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTableTransakcje.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jLabel5.setText("Transakcje:");

        zalogowanyLabel.setText("Zaloguj się, aby uruchomić program.");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(zalogowanyLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 201, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(zaloguj, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(statystyki, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(rejestracja, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                .add(layout.createSequentialGroup()
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, dodaj_transakcje, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, usun_kategorie, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, dodaj_kategorie, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(usun_transakcje, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(edytuj_kategorie, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(wyswietl_kategorie)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, edytuj_transakcje, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, wyswietl_transakcje, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .add(jLabel1)
                                .add(jLabel2)
                                .add(jLabel3))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, o_koncie, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(zaloguj)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(dodaj_transakcje)
                            .add(edytuj_transakcje))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(usun_transakcje)
                            .add(wyswietl_transakcje))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(dodaj_kategorie)
                            .add(edytuj_kategorie))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(usun_kategorie)
                            .add(wyswietl_kategorie))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(rejestracja)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(statystyki)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(o_koncie))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(zalogowanyLabel))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dodaj_transakcjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodaj_transakcjeActionPerformed

        String sql = "null",
                user = "null",
                nazwa = "null",
                kategoria = "null",
                kwota = "null",
                data = "null",
                komentarz = "null",
                typ = "null";

        StringBuilder lista = new StringBuilder();
        String bufor;
        int i = 1, id_kategorii = 0;

        List<String> lista_kategorii = new ArrayList<>();

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Statement stmt;
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select nazwa_kategorii from kategoria");

            while (rs.next()) {
                bufor = rs.getString(i) + "\n";
                lista_kategorii.add(bufor);
            }

        } catch (ClassNotFoundException | SQLException e) {
            Logger.getLogger(JFrameMainWindow.class.getName()).log(Level.SEVERE, null, e);
        }

        JComboBox categoryList = new JComboBox();
        categoryList.setModel(new DefaultComboBoxModel(lista_kategorii.toArray()));
        JTextField nazwaField = new JTextField(10);
        JTextField kategoriaField = new JTextField(10);
        JTextField kwotaField = new JTextField(10);
        JTextField dataField = new JTextField(10);
        JTextField komentarzField = new JTextField(10);
        JDateChooser wybierzData = new JDateChooser();
        //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String sdf = "yyyy-MM-dd";
        wybierzData.setDateFormatString(sdf);

        JRadioButton wydatekButton = new JRadioButton("Wydatek");
        JRadioButton dochodButton = new JRadioButton("Dochód");
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(wydatekButton);
        buttonGroup.add(dochodButton);

        JPanel myPanel = new JPanel();
        myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
        myPanel.add(new JLabel("*Rodzaj transakcji:"));
        myPanel.add(wydatekButton);
        myPanel.add(dochodButton);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("*Nazwa:"));
        myPanel.add(nazwaField);
        myPanel.add(Box.createVerticalStrut(15)); // a spacer
        myPanel.add(new JLabel("*Kategoria:"));
        myPanel.add(categoryList);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("*Kwota:"));
        myPanel.add(kwotaField);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("*Data:"));
        myPanel.add(wybierzData);
       
        // myPanel.add(new JLabel("Data:"));
        //myPanel.add(dataField);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("Komentarz:"));
        myPanel.add(komentarzField);

        int result = JOptionPane.showOptionDialog(null,
                myPanel,
                "Dodaj transakcję",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title
        if (result == JOptionPane.OK_OPTION) {
            if (wydatekButton.isSelected()) {
                typ = "wydatek";
            } else if (dochodButton.isSelected()) {
                typ = "dochod";
            }
            kategoria = (String) categoryList.getSelectedItem();
            kategoria = kategoria.substring(0, kategoria.length() - 1);
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt;
                stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select id_kategorii from kategoria where nazwa_kategorii = '" + kategoria + "'");
                rs.next();
                id_kategorii = rs.getInt(1);

            } catch (ClassNotFoundException | SQLException e) {
                Logger.getLogger(JFrameMainWindow.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(myPanel, "Coś poszło nie tak!. [e1x0]", "Błąd bazy danych.", JOptionPane.ERROR_MESSAGE);
            }
            nazwa = nazwaField.getText();
            kwota = kwotaField.getText();

            komentarz = komentarzField.getText();
            java.util.Date date2 = wybierzData.getDate();

            if(date2 !=null){
            java.sql.Date sqldate = new java.sql.Date(wybierzData.getDate().getTime());
            data = sqldate.toString();
            } else data = "2018-01-17 12:59:59";

            //System.out.print(id_kategorii);
            try {
                Class.forName("com.mysql.jdbc.Driver");

                Statement stmt = con.createStatement();
                sql = "insert into " + typ + " ( `id_konta`, `id_kategorii`, `nazwa`,`data`, `kwota`, `komentarz`) VALUES "
                        + "('" + id_konta + "','" + id_kategorii + "','" + nazwa + "','" + data + "','" + kwota + "','" + komentarz + "')";

                stmt.executeUpdate(sql);
                ResultSet rs = stmt.executeQuery("select * from view_" + typ + " where " + typ + " = '" + nazwa + "' and id_konta = '" + id_konta + "'");
                DefaultTableModel model = (DefaultTableModel) jTableTransakcje.getModel();

                while (rs.next()) {
                    model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4).substring(0, 10), rs.getString(5), rs.getString(6)});
                }
                JOptionPane.showMessageDialog(myPanel, "Pomyślnie dodano transakcję.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);

            } catch (ClassNotFoundException | SQLException | NullPointerException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(myPanel, "Coś poszło nie tak!. [e1x0]", "Błąd bazy danych.", JOptionPane.ERROR_MESSAGE);
            }

        }
         try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select * from view_" + typ + " where id_konta = '" + id_konta + "'");

                DefaultTableModel model = (DefaultTableModel) jTableTransakcje.getModel();
                int rowCount = model.getRowCount();

                for (int j = rowCount - 1; j >= 0; j--) {
                    model.removeRow(j);
                }
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4).substring(0, 10), rs.getString(5), rs.getString(6)});
                }

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_dodaj_transakcjeActionPerformed

    private void edytuj_transakcjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edytuj_transakcjeActionPerformed
        String transakcja, bufor, user, typ = "null";
        int i = 1;
        JRadioButton wydatekButton = new JRadioButton("Wydatek");
        JRadioButton dochodButton = new JRadioButton("Dochód");
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(wydatekButton);
        buttonGroup.add(dochodButton);

        JPanel myPanel1 = new JPanel();
        myPanel1.setLayout(new BoxLayout(myPanel1, BoxLayout.Y_AXIS));
        myPanel1.add(new JLabel("Rodzaj transakcji:"));
        myPanel1.add(wydatekButton);
        myPanel1.add(dochodButton);

        List<String> lista_transakcji = new ArrayList<>();
        int result1 = JOptionPane.showOptionDialog(null,
                myPanel1,
                "Rodzaj transakcji",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title
        if (result1 == JOptionPane.OK_OPTION) {
            if (wydatekButton.isSelected()) {
                typ = "wydatek";

            } else if (dochodButton.isSelected()) {
                typ = "dochod";
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select nazwa from "+typ+" where id_konta = '"+id_konta+"'");

                while (rs.next()) {
                    bufor = rs.getString(i) + "\n";
                    lista_transakcji.add(bufor);
                }

                JTextField nazwaField = new JTextField(10);
                JComboBox categoryList = new JComboBox();
                categoryList.setModel(new DefaultComboBoxModel(lista_transakcji.toArray()));

                JPanel myPanel = new JPanel();

                myPanel.add(new JLabel("Wybierz transakcję:"));
                myPanel.add(categoryList);
                myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
                myPanel.add(new JLabel("Nowa nazwa:"));
                myPanel.add(nazwaField);

                int result = JOptionPane.showOptionDialog(null,
                        myPanel,
                        "Edytuj transakcję",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (result == JOptionPane.OK_OPTION) {

                    bufor = nazwaField.getText();
                    transakcja = (String) categoryList.getSelectedItem();
                    transakcja = transakcja.substring(0, transakcja.length() - 1);
                    System.out.println("Transakcja: " + transakcja);
                    PreparedStatement pstmt = con.prepareStatement("update "+typ+" set nazwa = '" + bufor + "' where nazwa = '" + transakcja + "'");
                    pstmt.executeUpdate();

                    JOptionPane.showMessageDialog(myPanel, "Pomyślnie edytowano transakcję.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);

                }

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }

        }
        try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select * from view_" + typ + " where id_konta = '" + id_konta + "'");

                DefaultTableModel model = (DefaultTableModel) jTableTransakcje.getModel();
                int rowCount = model.getRowCount();

                for (int j = rowCount - 1; j >= 0; j--) {
                    model.removeRow(j);
                }
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4).substring(0, 10), rs.getString(5), rs.getString(6)});
                }

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_edytuj_transakcjeActionPerformed

    private void statystykiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statystykiActionPerformed
      String user="null";
        try {
                Statement stmt;
                stmt = con.createStatement();
                 ResultSet rs = stmt.executeQuery("select * from view_statystyki_ogolne;");
                while (rs.next()) {
                            user = "Statystyki aplikacji:\n"
                            + "\nBilans: " + rs.getInt(2)
                            + "\nLiczba wydatków: " + rs.getInt(3)
                            + "\nSuma wydatków: " + rs.getInt(4)
                            + "\nLiczba przychodów: " + rs.getInt(5)
                            + "\nSuma przychodów: " + rs.getInt(6);

                }
            } catch (SQLException ex) {
                Logger.getLogger(JFrameMainWindow.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Coś poszło nie tak!. [e1x0]", "Błąd bazy danych.", JOptionPane.ERROR_MESSAGE);
        }
         Object[] oky = {"OK"};
                JOptionPane.showOptionDialog(null,
 user,
                        "Statystyki",  JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, 
                        oky, oky[0]); 
    }//GEN-LAST:event_statystykiActionPerformed

    private void zalogujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zalogujActionPerformed
        String user,
                password;
        int typKonta = -1;
        
        DefaultTableModel model = (DefaultTableModel) jTableTransakcje.getModel();
                int rowCount = model.getRowCount();

                for (int i = rowCount - 1; i >= 0; i--) {
                    model.removeRow(i);
                }

        JTextField userField = new JTextField(10);
        JPasswordField passwordField = new JPasswordField(10);

        JPanel myPanel = new JPanel();

        myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
        myPanel.add(new JLabel("Email:"));
        myPanel.add(userField);
        myPanel.add(Box.createVerticalStrut(15)); // a spacer
        myPanel.add(new JLabel("Hasło:"));
        myPanel.add(passwordField);
        myPanel.add(Box.createVerticalStrut(15));

        userField.requestFocus();

        //int result = JOptionPane.showConfirmDialog(null, myPanel, "Zaloguj się", JOptionPane.OK_CANCEL_OPTION);
        int result = JOptionPane.showOptionDialog(null,
                myPanel,
                "Zaloguj się",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title
        if (result == JOptionPane.OK_OPTION) {
            user = userField.getText();
            password = passwordField.getText();
            dodaj_transakcje.setEnabled(false);
            edytuj_transakcje.setEnabled(false);
            usun_transakcje.setEnabled(false);
            wyswietl_transakcje.setEnabled(false);

            dodaj_kategorie.setEnabled(false);
            usun_kategorie.setEnabled(false);
            edytuj_kategorie.setEnabled(false);
            wyswietl_kategorie.setEnabled(false);

            statystyki.setEnabled(false);
            rejestracja.setEnabled(false);
            try {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/bd2p_budzet_domowy", "root", "qwertyqaz");
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select id_konta from konto where email = '" + user + "'");

                if (rs.next() == false) {
                    System.out.println("Konto nie istnieje");
                    JOptionPane.showMessageDialog(myPanel, "Niepoprawne hasło lub nazwa użytkownika. [e0x0]", "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);

                } else {
                    rs = stmt.executeQuery("select haslo from konto where email = '" + user + "'");
                    rs.next();
                    if (rs.getString(1) == null ? password != null : !rs.getString(1).equals(password)) {
                        System.out.println("Niepoprawne hasło");
                        JOptionPane.showMessageDialog(myPanel, "Niepoprawne hasło lub nazwa użytkownika. [e0x1]", "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
                    } else {
                        rs = stmt.executeQuery("select typ_konta from konto where email = '" + user + "'");
                        rs.next();
                        if (null != rs.getString(1)) {
                            switch (rs.getString(1)) {
                                case "A":
                                    typKonta = 0;
                                    //System.out.println("Zalogowano jako admin");
                                    //JOptionPane.showMessageDialog(myPanel, "Zalogowano pomyślnie jako administrator.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);
                                    break;
                                case "R":
                                    typKonta = 1;
                                    //System.out.println("Zalogowano jako rodzic");
                                    //JOptionPane.showMessageDialog(myPanel, "Zalogowano pomyślnie jako rodzic.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);
                                    break;
                                case "D":
                                    typKonta = 2;
                                    //System.out.println("Zalogowano jako dziecko");
                                    //JOptionPane.showMessageDialog(myPanel, "Zalogowano pomyślnie jako dziecko.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);
                                    break;
                                default:
                                    break;
                            }
                        }

                        rs = stmt.executeQuery("select id_konta from konto where email = '" + user + "'");
                        rs.next();
                        id_konta = rs.getInt(1);
                        /*
                        rs = stmt.executeQuery("select * from konto where email = '" + user + "'");
                while (rs.next()) {
                    //System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(4)+" "+rs.getString(5)); 
                    user = "Szczegóły konta:\nID konta: " + rs.getInt(1)
                            + "\nEmail: " + rs.getString(2)
                            + "\nNazwisko: " + rs.getString(4)
                            + "\nImię: " + rs.getString(5)
                            + "\nTyp konta: " + rs.getString(6)
                            + "\nLimit konta: " + rs.getString(7)
                            + "\nBilans: " + rs.getString(8);
                    info_o_koncie = user;
                }*/
                    }

                }

            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(myPanel, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
                System.out.println(e);
            }

            switch (typKonta) {
                case 0:
                    try {
                        Class.forName("com.mysql.jdbc.Driver");
                        con = DriverManager.getConnection(
                                "jdbc:mysql://localhost:3306/bd2p_budzet_domowy", "root", "qwertyqaz");
                    } catch (ClassNotFoundException | SQLException e) {
                        JOptionPane.showMessageDialog(myPanel, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
                        System.out.println(e);
                    }

                    dodaj_transakcje.setEnabled(true);
                    edytuj_transakcje.setEnabled(true);
                    usun_transakcje.setEnabled(true);
                    wyswietl_transakcje.setEnabled(true);

                    dodaj_kategorie.setEnabled(true);
                    usun_kategorie.setEnabled(true);
                    edytuj_kategorie.setEnabled(true);
                    wyswietl_kategorie.setEnabled(true);

                    statystyki.setEnabled(true);
                    rejestracja.setEnabled(true);

                    break;
                case 1:
                    try {
                        Class.forName("com.mysql.jdbc.Driver");
                        con = DriverManager.getConnection(
                                "jdbc:mysql://localhost:3306/bd2p_budzet_domowy", "r_tata", "qwertyqaz");
                    } catch (ClassNotFoundException | SQLException e) {
                        JOptionPane.showMessageDialog(myPanel, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
                        System.out.println(e);
                    }
                    dodaj_transakcje.setEnabled(true);
                    edytuj_transakcje.setEnabled(true);
                    usun_transakcje.setEnabled(true);
                    wyswietl_transakcje.setEnabled(true);

                    dodaj_kategorie.setEnabled(true);
                    usun_kategorie.setEnabled(true);
                    edytuj_kategorie.setEnabled(true);
                    wyswietl_kategorie.setEnabled(true);

                    statystyki.setEnabled(true);
                    rejestracja.setEnabled(true);
                    break;
                case 2:
                    try {
                        Class.forName("com.mysql.jdbc.Driver");
                        con = DriverManager.getConnection(
                                "jdbc:mysql://localhost:3306/bd2p_budzet_domowy", "d_adam", "qwertyqaz");
                    } catch (ClassNotFoundException | SQLException e) {
                        JOptionPane.showMessageDialog(myPanel, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
                        System.out.println(e);
                    }
                    dodaj_transakcje.setEnabled(true);
                    //edytuj_transakcje.setEnabled(true);
                    //usun_transakcje.setEnabled(true);
                    wyswietl_transakcje.setEnabled(true);

                    // dodaj_kategorie.setEnabled(true);
                    //usun_kategorie.setEnabled(true);
                    //edytuj_kategorie.setEnabled(true);
                    wyswietl_kategorie.setEnabled(true);

                    statystyki.setEnabled(true);
                    // ustawienia_konta.setEnabled(true);
                    break;
                default:
                    //JOptionPane.showMessageDialog(myPanel, "Ups, coś poszło nie tak.", "Błąd", JOptionPane.ERROR_MESSAGE);
                    break;
            }
            
            try {
                Class.forName("com.mysql.jdbc.Driver");
                        con = DriverManager.getConnection(
                                "jdbc:mysql://localhost:3306/bd2p_budzet_domowy", "root", "qwertyqaz");
                Statement stmt;
                stmt = con.createStatement();
                 ResultSet rs = stmt.executeQuery("select * from konto where email = '" + user + "'");
                while (rs.next()) {
                            user = "Szczegóły konta:\nID konta: " + rs.getInt(1)
                            + "\nEmail: " + rs.getString(2)
                            + "\nNazwisko: " + rs.getString(4)
                            + "\nImię: " + rs.getString(5)
                            + "\nTyp konta: " + rs.getString(6)
                            + "\nLimit konta: " + rs.getString(7)
                            + "\nBilans: " + rs.getString(8);
                    info_o_koncie = user;
                }
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(JFrameMainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            zalogowanyLabel.setText("Zalogowano jako: " + userField.getText() + ", id:" + id_konta + " ,typ:" + typKonta);
        }
    }//GEN-LAST:event_zalogujActionPerformed

    private void dodaj_transakcjeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dodaj_transakcjeStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_dodaj_transakcjeStateChanged

    private void rejestracjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejestracjaActionPerformed
        String sql, user,
                email = "null",
                haslo = "null",
                nazwisko = "null",
                imie = "null",
                limit = "null",
                typ = "null";

        StringBuilder lista = new StringBuilder();

        JTextField emailField = new JTextField(10);
        JPasswordField hasloField = new JPasswordField(10);
        JTextField nazwiskoField = new JTextField(10);
        JTextField imieField = new JTextField(10);
        JTextField limitField = new JTextField(10);

        JRadioButton rodzicButton = new JRadioButton("Rodzic");
        JRadioButton dzieckoButton = new JRadioButton("Dziecko");
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(rodzicButton);
        buttonGroup.add(dzieckoButton);

        JPanel myPanel = new JPanel();
        myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
        myPanel.add(new JLabel("Email:"));
        myPanel.add(emailField);
        myPanel.add(Box.createVerticalStrut(15)); // a spacer
        myPanel.add(new JLabel("Hasło:"));
        myPanel.add(hasloField);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("Nazwisko:"));
        myPanel.add(nazwiskoField);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("Imie:"));
        myPanel.add(imieField);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("Limit konta:"));
        myPanel.add(limitField);
        myPanel.add(Box.createVerticalStrut(15));
        myPanel.add(new JLabel("Typ konta:"));
        myPanel.add(rodzicButton);
        myPanel.add(dzieckoButton);

        int result = JOptionPane.showOptionDialog(null,
                myPanel,
                "Dodaj konto",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title
        if (result == JOptionPane.OK_OPTION) {

            email = emailField.getText();
            haslo = hasloField.getText();
            nazwisko = nazwiskoField.getText();
            imie = imieField.getText();
            limit = limitField.getText();
            if (rodzicButton.isSelected()) {
                typ = "R";
            } else if (dzieckoButton.isSelected()) {
                typ = "D";
            }

            try {
                Class.forName("com.mysql.jdbc.Driver");
                //Connection con = DriverManager.getConnection(
                //        "jdbc:mysql://localhost:3306/bd2p_budzet_domowy", "root", "qwertyqaz");
                Statement stmt = con.createStatement();
                sql = "insert into konto (  `email`, `haslo`, `nazwisko`, `imie`,`typ_konta`,`limit_konta`,`bilans`) VALUES "
                        + "('" + email + "','" + haslo + "','" + nazwisko + "','" + imie + "','" + typ + "','" + limit + "','0')";
                stmt.executeUpdate(sql);
                ResultSet rs = stmt.executeQuery("select * from konto where email = '" + email + "'");
                while (rs.next()) {
                    //System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(4)+" "+rs.getString(5)); 
                    user = "Szczegóły konta:\nID konta: " + rs.getInt(1)
                            + "\nEmail: " + rs.getString(2)
                            + "\nNazwisko: " + rs.getString(4)
                            + "\nImię: " + rs.getString(5)
                            + "\nTyp konta: " + rs.getString(6)
                            + "\nLimit konta: " + rs.getString(7)
                            + "\nBilans: " + rs.getString(8);
                    info_o_koncie = user;
                }
                Object[] oky = {"OK"};
                JOptionPane.showOptionDialog(null,
                        info_o_koncie,
                        "Dodaj konto",
                        JOptionPane.PLAIN_MESSAGE,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        oky, //the titles of buttons
                        oky[0]); //default button title

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(myPanel, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_rejestracjaActionPerformed

    private void dodaj_kategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodaj_kategorieActionPerformed
        String kategoria;

        JTextField nazwaField = new JTextField(10);
        JPanel myPanel = new JPanel();

        myPanel.add(new JLabel("Nazwa kategorii:"));
        myPanel.add(nazwaField);

        int result = JOptionPane.showOptionDialog(null,
                myPanel,
                "Dodaj kategorię",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title

        if (result == JOptionPane.OK_OPTION) {
            kategoria = nazwaField.getText();

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt = con.createStatement();

                stmt.executeUpdate("insert into kategoria (nazwa_kategorii) VALUE  ('" + kategoria + "')");
                JOptionPane.showMessageDialog(myPanel, "Pomyślnie dodano kategorię.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_dodaj_kategorieActionPerformed

    private void usun_kategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_kategorieActionPerformed
        String kategoria, bufor;
        int i = 1;

        List<String> lista_kategorii = new ArrayList<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select nazwa_kategorii from kategoria");

            while (rs.next()) {
                bufor = rs.getString(i) + "\n";
                lista_kategorii.add(bufor);
            }

            JComboBox categoryList = new JComboBox();
            categoryList.setModel(new DefaultComboBoxModel(lista_kategorii.toArray()));

            JPanel myPanel = new JPanel();

            myPanel.add(new JLabel("Wybierz kategorię:"));
            myPanel.add(categoryList);

            int result = JOptionPane.showOptionDialog(null,
                    myPanel,
                    "Usuń kategorię",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, //do not use a custom Icon
                    options, //the titles of buttons
                    options[0]); //default button title
            if (result == JOptionPane.OK_OPTION) {
                kategoria = (String) categoryList.getSelectedItem();
                kategoria = kategoria.substring(0, kategoria.length() - 1);

                PreparedStatement pstmt = con.prepareStatement("delete from kategoria where nazwa_kategorii = '" + kategoria + "'");
                pstmt.executeUpdate();

                JOptionPane.showMessageDialog(myPanel, "Pomyślnie usunięto kategorię.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Nie można usunąć kategorii, ponieważ przypisana jest do niej transakcja w systemie.", "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_usun_kategorieActionPerformed

    private void edytuj_kategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edytuj_kategorieActionPerformed
        String kategoria, bufor;
        int i = 1;

        List<String> lista_kategorii = new ArrayList<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select nazwa_kategorii from kategoria");

            while (rs.next()) {
                bufor = rs.getString(i) + "\n";
                lista_kategorii.add(bufor);
            }

            JTextField nazwaField = new JTextField(10);
            JComboBox categoryList = new JComboBox();
            categoryList.setModel(new DefaultComboBoxModel(lista_kategorii.toArray()));

            JPanel myPanel = new JPanel();

            myPanel.add(new JLabel("Wybierz kategorię:"));
            myPanel.add(categoryList);
            myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
            myPanel.add(new JLabel("Nowa nazwa:"));
            myPanel.add(nazwaField);

            int result = JOptionPane.showOptionDialog(null,
                    myPanel,
                    "Edytuj kategorię",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, //do not use a custom Icon
                    options, //the titles of buttons
                    options[0]); //default button title
            if (result == JOptionPane.OK_OPTION) {
                bufor = nazwaField.getText();
                kategoria = (String) categoryList.getSelectedItem();
                kategoria = kategoria.substring(0, kategoria.length() - 1);
                System.out.println("Kategoria: " + kategoria);
                PreparedStatement pstmt = con.prepareStatement("update kategoria set nazwa_kategorii = '" + bufor + "' where nazwa_kategorii = '" + kategoria + "'");
                pstmt.executeUpdate();

                JOptionPane.showMessageDialog(myPanel, "Pomyślnie edytowano kategorię.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_edytuj_kategorieActionPerformed

    private void wyswietl_kategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wyswietl_kategorieActionPerformed

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from kategoria");

            DefaultTableModel model = (DefaultTableModel) jTableTransakcje.getModel();
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2)});
            }

        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_wyswietl_kategorieActionPerformed

    private void usun_transakcjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_transakcjeActionPerformed
        String transakcja, bufor, user, typ = "null";
        int i = 1,id;
        JRadioButton wydatekButton = new JRadioButton("Wydatek");
        JRadioButton dochodButton = new JRadioButton("Dochód");
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(wydatekButton);
        buttonGroup.add(dochodButton);

        JPanel myPanel1 = new JPanel();
        myPanel1.setLayout(new BoxLayout(myPanel1, BoxLayout.Y_AXIS));
        myPanel1.add(new JLabel("Rodzaj transakcji:"));
        myPanel1.add(wydatekButton);
        myPanel1.add(dochodButton);

        List<String> lista_transakcji = new ArrayList<>();
        int result1 = JOptionPane.showOptionDialog(null,
                myPanel1,
                "Rodzaj transakcji",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title
        if (result1 == JOptionPane.OK_OPTION) {
            if (wydatekButton.isSelected()) {
                typ = "wydatek";

            } else if (dochodButton.isSelected()) {
                typ = "dochod";
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select nazwa from "+typ+" where id_konta = '"+id_konta+"'");

                while (rs.next()) {
                    bufor = rs.getString(i) + "\n";
                    lista_transakcji.add(bufor);
                }

                JComboBox categoryList = new JComboBox();
                categoryList.setModel(new DefaultComboBoxModel(lista_transakcji.toArray()));

                JPanel myPanel = new JPanel();

                myPanel.add(new JLabel("Wybierz transakcję:"));
                myPanel.add(categoryList);
                myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));


                int result = JOptionPane.showOptionDialog(null,
                        myPanel,
                        "Edytuj transakcję",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, //do not use a custom Icon
                        options, //the titles of buttons
                        options[0]); //default button title
                if (result == JOptionPane.OK_OPTION) {

                    transakcja = (String) categoryList.getSelectedItem();
                    transakcja = transakcja.substring(0, transakcja.length() - 1);
                    
                    //System.out.println("Transakcja: " + transakcja);
                    if ("wydatek".equals(typ)) {
                    Statement stmt1 = con.createStatement();
                ResultSet rs1 = stmt1.executeQuery("select id_wydatek from wydatek where nazwa = '"+transakcja+"'");
                rs1.next();
                id = rs1.getInt(1);
                PreparedStatement pstmt = con.prepareStatement("delete from wydatek where nazwa = '" + transakcja + "' and id_wydatek='" + id + "'");
                    pstmt.executeUpdate();
                    }
                    else if("wydatek".equals(typ)){
                        Statement stmt1 = con.createStatement();
                ResultSet rs1 = stmt1.executeQuery("select id_dochodu from dochod where nazwa = '"+transakcja+"'");
                rs1.next();
                id = rs1.getInt(1);
                PreparedStatement pstmt = con.prepareStatement("delete from dochod where nazwa = '" + transakcja + "' and id_dochodu='" + id + "'");
                    pstmt.executeUpdate();
                    }
                    

                    JOptionPane.showMessageDialog(myPanel, "Pomyślnie usunięto transakcję.", "Potwierdzenie", JOptionPane.INFORMATION_MESSAGE);

                }

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }

        }
        try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select * from view_" + typ + " where id_konta = '" + id_konta + "'");

                DefaultTableModel model = (DefaultTableModel) jTableTransakcje.getModel();
                int rowCount = model.getRowCount();

                for (int j = rowCount - 1; j >= 0; j--) {
                    model.removeRow(j);
                }
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4).substring(0, 10), rs.getString(5), rs.getString(6)});
                }

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_usun_transakcjeActionPerformed

    private void wyswietl_transakcjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wyswietl_transakcjeActionPerformed
        String typ = "null";

        JRadioButton wydatekButton = new JRadioButton("wydatki");
        JRadioButton dochodButton = new JRadioButton("dochody");
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(wydatekButton);
        buttonGroup.add(dochodButton);

        JPanel myPanel = new JPanel();
        myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
        myPanel.add(new JLabel("Rodzaj transakcji:"));
        myPanel.add(wydatekButton);
        myPanel.add(dochodButton);

        int result = JOptionPane.showOptionDialog(null,
                myPanel,
                "Rodzaj transakcji",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title
        if (result == JOptionPane.OK_OPTION) {
            if (wydatekButton.isSelected()) {
                typ = "wydatek";

            } else if (dochodButton.isSelected()) {
                typ = "dochod";
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select * from view_" + typ + " where id_konta = '" + id_konta + "'");

                DefaultTableModel model = (DefaultTableModel) jTableTransakcje.getModel();
                int rowCount = model.getRowCount();

                for (int i = rowCount - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4).substring(0, 10), rs.getString(5), rs.getString(6)});
                }

            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e, "Błąd bazy danych", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_wyswietl_transakcjeActionPerformed

    private void o_koncieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_o_koncieActionPerformed
        Object[] oky = {"OK"};
        JOptionPane.showOptionDialog(null,
                info_o_koncie,
                "Dodaj konto",
                JOptionPane.PLAIN_MESSAGE,
                JOptionPane.QUESTION_MESSAGE,
                null, 
                oky, 
                oky[0]);
    }//GEN-LAST:event_o_koncieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            // Set System L&F
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrameMainWindow().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dodaj_kategorie;
    private javax.swing.JButton dodaj_transakcje;
    private javax.swing.JButton edytuj_kategorie;
    private javax.swing.JButton edytuj_transakcje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTransakcje;
    private javax.swing.JButton o_koncie;
    private javax.swing.JButton rejestracja;
    private javax.swing.JButton statystyki;
    private javax.swing.JButton usun_kategorie;
    private javax.swing.JButton usun_transakcje;
    private javax.swing.JButton wyswietl_kategorie;
    private javax.swing.JButton wyswietl_transakcje;
    private javax.swing.JLabel zalogowanyLabel;
    private javax.swing.JButton zaloguj;
    // End of variables declaration//GEN-END:variables

    private JComponent makeTextPanel(String text) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        JPanel panel = new JPanel(false);
        JLabel filler = new JLabel(text);
        filler.setHorizontalAlignment(JLabel.CENTER);
        panel.setLayout(new GridLayout(1, 1));
        panel.add(filler);
        return panel;
    }

    protected ImageIcon createImageIcon(String path) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        /**
         * Returns an ImageIcon, or null if the path was invalid.
         */
        java.net.URL imgURL = getClass().getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }
}
